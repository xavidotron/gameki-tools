#!/usr/bin/python
# -*- coding: utf-8 -*-

import subprocess, sys, os, glob
import yaml
import argparse, getpass

from prod_lib import *

parser = argparse.ArgumentParser()
parser.add_argument("--pdf-dir", help="copy output pdfs to here")
parser.add_argument("--names", help="use names instead of macros for filenames",
                    action='store_true')
parser.add_argument("--run",
                    help="set GAMERUN to this, proding books for this run")
args = parser.parse_args()

macros = [
    unicode(m.strip(), 'utf-8')
    for m in
    get_text(GAMEKI_DIR + 'lib/charmacros.tex').strip().split('\n')]

if args.names:
    names = [
        unicode(m.strip(), 'utf-8')
        for m in
        get_text(GAMEKI_DIR + 'lib/charnames.tex',
                 run=args.run).strip().split('\n')]

pdfdir = args.pdf_dir
run_infix = ''
if not pdfdir:
    pdfdir = 'Out/book/'
    if args.run is not None:
        run_infix = '%s-' % args.run

rules = get_pdf_path('Handouts/rules-scenario.tex')
for i in xrange(len(macros)):
    m = macros[i]
    cover = get_pdf_path('Handouts/cover.tex', m[1:], run=args.run)
    body = get_pdf_path('Charsheets/%s.tex' % m[2:], run=args.run)
    if args.run is not None:
        statcard = get_pdf_path('statcards-%s-%s' % (args.run, m[1:]))
    else:
        statcard = get_pdf_path('statcards-%s' % m[1:])

    try:
        os.makedirs(pdfdir)
    except OSError:
        pass
    if args.names:
        name = names[i].replace('/', '-')
    else:
        name = m[1:]
    joined = '%s/%s%s-packet.pdf' % (pdfdir, run_infix, name)
    run_cmd('pdfjoin', ['-o', joined, cover, rules, body])
    book = '%s/%s%s-booklet.pdf' % (pdfdir, run_infix, name)
    run_cmd('Gameki/bin/backbook.sh', [joined, statcard, book])
    statcard_out = '%s/%s%s-statcard.pdf' % (pdfdir, run_infix, name)
    run_cmd('cp', [statcard, statcard_out])
    print 'Wrote %s.' % book
